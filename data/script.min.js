function initArduinoIO(){
	docNameSave = document.getElementsByClassName("save_name"),
	docName=$("input[data-class^='editable']");
	var t=Math.min(docName.length, docNameSave.length);
	docNameChanged = Array(t);
	for (var e=0; e < t; e++) {
	  docNameChanged[e]=!1;
	  $(docNameSave[e]).click(function(){
	  									for(var e=0;e<docNameSave.length;e++) docNameSave[e]==this&&(docNameChanged[e]=!0);
	  									sequence++;
	  								});
	}
	docSockets=document.getElementsByName("socket"),
	changeState=Array(docSockets.length);
	for(var e=0;e<docSockets.length;e++)
		changeState[e]=!1,
		$(docSockets[e]).change(function(){
											for(var e=0;e<docSockets.length;e++)
												docSockets[e]==this&&(changeState[e]=!0);
											sequence++;
											});
	$(docSockets).prop("disabled").true,
	docTimerCheckbox=document.getElementsByName("TimerCheckbox"),
	changeStateTCheckbox=Array(docTimerCheckbox.length);
	for(var e=0;e<docTimerCheckbox.length;e++)
		changeStateTCheckbox[e]=!1,
    	$(docTimerCheckbox[e]).change(function(){
		        								for(var e=0;e<docTimerCheckbox.length;e++)
		        									docTimerCheckbox[e]==this&&(changeStateTCheckbox[e]=!0);
		        								sequence++;
		       								});
	$(docTimerCheckbox).prop("disabled").true,
	docTimer=document.getElementsByName("clockTimer"),
	changeStateTimer=Array(docTimer.length);
	for(var e=0;e<docTimer.length;e++)
		changeStateTimer[e]=!1,
		$(docTimer[e]).change(function(){
											for(var e=0;e<docTimer.length;e++)
												docTimer[e]==this&&(changeStateTimer[e]=!0);
											sequence++;
										});
	$(docTimer).prop("disabled").true,
	docGroups=document.getElementsByClassName("selectpicker");
	if (docGroups.lenght > docSockets.length)
		docGroups.splice(docSockets.length, docGroups.lenght - docSockets.length);
	changeStateGroups = Array(docGroups.lenght);
	for(var e=0;e<docGroups.length;e++)
		changeStateGroups[e] = !1,
		$(docGroups[e]).change(function(){
											for(var e=0;e<docGroups.length;e++)
												docGroups[e]==this&&(changeStateGroups[e]=!0);
											sequence++;
										});

	docCandles=document.getElementsByName("candlestick"),
	stateCandles=Array(docCandles.length);
	for(var e=0;e<docCandles.length;e++)
		$(docCandles[e])[0].value="",
		stateCandles[e]=$(docCandles[e])[0].value;
	$(docCandles).prop("disabled").true,
	docCountdowns=document.getElementsByClassName("btn btn-primary count_value"),
	changeStateCountdown=Array(docCountdowns.length),
	stateCountdownValue=Array(docCountdowns.length);
	for(var e=0;e<docCountdowns.length;e++)
		changeStateCountdown[e]=0,
		stateCountdownValue[e]=0,
		docCountdowns[e].scriptIndex = e;
	$(document).on("click",".count_value",function(){
														for(var e=0;e<docCountdowns.length;e++)
															docCountdowns[e]==this&&
															(stateCountdownValue[e]=($(".data_type").val()=='hr')?$(".data_time").val()*60:$(".data_time").val(),changeStateCountdown[e]=!0);
														sequence++;
				});
	docWave=document.getElementById("wave_time");
	$(docWave).change(function(){
						changeStateWave=!0
						sequence++;
						});
	GetArduinoIO()
}

function GetArduinoIO(){
	var e="&nocache="+1e6*Math.random(),
	t=new XMLHttpRequest;
	t.onreadystatechange=
		function(){
					4==this.readyState&&200==this.status&&null!=this.responseXML&&(this.responseXML.getElementsByTagName("sequence")[0].childNodes[0].nodeValue>=sequence)&&
																					(AnalogXMLupdate(this.responseXML.getElementsByTagName("analog")),
																					TimerToggleXMLupdate(this.responseXML.getElementsByTagName("TimerCheckbox")),
																					SocketXMLupdate(this.responseXML.getElementsByTagName("Socket")),
																					TimerValueXMLupdate(this.responseXML.getElementsByTagName("TimerValue")),
																					CheckBoxUpdate(this.responseXML.getElementsByTagName("Switch"),
																									this.responseXML.getElementsByTagName("Waiting")),
																					GroupsUpdate(this.responseXML.getElementsByTagName("Group")),
																					WaveUpdate(this.responseXML.getElementsByTagName("Wave")),
																					PumpUpdate(this.responseXML.getElementsByTagName("Pump")),
																					Remainings(this.responseXML.getElementsByTagName("Override"),
																								this.responseXML.getElementsByTagName("Switch")),
																					NameUpdate(this.responseXML.getElementsByTagName("name")),
																					TimeUpdate(this.responseXML.getElementsByTagName("time")))
									};
	var n="";
	if(gotState){
		for(i=0;i<docSockets.length;i++)
			changeState[i]&&(changeState[i]=!1,n+=docSockets[i].checked?"SOC"+i+"=1&":"SOC"+i+"=0&");
		for(i=0;i<docTimerCheckbox.length;i++)
			changeStateTCheckbox[i]&&(changeStateTCheckbox[i]=!1,n+=docTimerCheckbox[i].checked?"TCB"+i+"=1&":"TCB"+i+"=0&");
		for(i=0;i<docTimer.length;i++)
			changeStateTimer[i]&&(changeStateTimer[i]=!1,n+="TIM"+i+"="+$(docTimer[i])[0].value+"&")
		for(i=0;i<docCandles.length;i++)
			stateCandles[i]!=$(docCandles[i])[0].value&&(stateCandles[i]=$(docCandles[i])[0].value,n+="C"+i+"="+$(docCandles[i])[0].value+"&")
		for(i=0;i<docGroups.length;i++)
			changeStateGroups[i]&&(changeStateGroups[i]=!1,n+="SOCG"+i+"="+$(docGroups[i])[0].value+"&")
		for(i=0;i<docCountdowns.length;i++)
			changeStateCountdown[i]&&(changeStateCountdown[i]=!1,n+="CD"+i+"="+stateCountdownValue[i]+"&")
		for(i=0;i<docNameChanged.length;i++)
			docNameChanged[i]&&(docNameChanged[i]=!1,n+="N"+i+"="+docName[i].value+"&")
		changeStateWave&&(changeStateWave=!1,n+="W="+docWave.value+"&")
		if (n.length > 0) n+="SEQ=" + sequence;
	}
	console.log(n),
	t.open("GET","/ajax_inputs?"+n+e,!0),
	t.send(null),
	strWaveSelection = "";
	setTimeout("GetArduinoIO()",1e3)
}
function TimeUpdate(x) {
	document.getElementById("currenttime").innerHTML = x[0].childNodes[0].nodeValue
}
function Remainings(x, y) {
	var t = Math.min(x.length, 14);
	for (var i = 0; i < t; i++) {
		var my_btn_id = "#modal" + (i+1);
		var n = new Date();
		var c = new Date();
		n.setTime(c.getTime() + 1000 * x[i].childNodes[0].nodeValue);
		var distance = n - c;
		if (distance <= 0) {
			$(my_btn_id+" .timmershow").html('');
			$(my_btn_id).removeClass("btn-success").removeClass("btn-danger").addClass("btn-info");
		} else {
			var days = Math.floor(distance / _day);
			var hours = Math.floor((distance % _day) / _hour);
			var minutes = Math.floor((distance % _hour) / _minute);
			var seconds = Math.floor((distance % _minute) / _second);
			$(my_btn_id+" .timmershow").html(hours + 'h:'+ minutes + 'm:' + seconds+'s');
			if (y[i].childNodes[0].nodeValue.toString() == "on") {
				$(my_btn_id).removeClass("btn-danger").removeClass("btn-info").addClass("btn-success");
			} else if (y[i].childNodes[0].nodeValue.toString() == "off") {
				$(my_btn_id).removeClass("btn-success").removeClass("btn-info").addClass("btn-danger");
			}
		}
	}
}
function NameUpdate(x) {
	var e,
	t = Math.min(x.length, docName.length);
	for(e=0;e<t;e++) {
		$(document.getElementsByClassName("socket_name"))[e*2].innerHTML = x[e].childNodes[0].nodeValue.toString();
	}
}
function CheckBoxUpdate(x, y) {
	var e,
	t = Math.min(y.length, docCandles.length),
	u = Math.min(x.length, docCandles.length)
	//var deb = "";
	for(e=0;e<t;e++) {
		$(docCandles[e]).candlestick(y[e].childNodes[0].nodeValue.toString());
	}
	for(e=u-8;e<u;e++) {
		$(docCandles[e]).candlestick(x[e].childNodes[0].nodeValue.toString());
	}
	//console.log(deb);
}
function WaveUpdate(x) {
	docWave.value=x[0].childNodes[0].nodeValue
}
function PumpUpdate(x) {
	$(document.getElementById("wave_selection")).selectpicker("val", x[0].childNodes[0].nodeValue.toString());
}
function GroupsUpdate(x) {
	var e,
	t = Math.min(x.length, docGroups.length);
	for(e=0;e<t;e++)
		$(docGroups[e]).selectpicker('val', x[e].childNodes[0].nodeValue.toString());
	//		docGroups[e].value=x[e].childNodes[0].nodeValue.toString()
}
function AnalogXMLupdate(x){
	var e,
	t = Math.min(x.length, document.getElementsByClassName("analog").length);
	for(e=0;e<t;e++)
		document.getElementsByClassName("analog")[e].innerHTML=x[e].childNodes[0].nodeValue
}
function SocketXMLupdate(x){
	var e= x.length;
	$(docSockets).prop("disabled",!1),
	gotState=!0;
	var t,i="";
	for(t=0;t<e&&t<docSockets.length;t++)
		"checked"===x[t].childNodes[0].nodeValue?(docSockets[t].checked||($(docSockets[t]).prop("checked",!0),
		$(docSockets[t]).bootstrapToggle("on")),i+="1"):(docSockets[t].checked&&($(docSockets[t]).prop("checked",!1),
		$(docSockets[t]).bootstrapToggle("off")),i+="0");
}
function TimerToggleXMLupdate(x){
	var e= x.length;
	$(docTimerCheckbox).prop("disabled",!1),
	gotState=!0;
	var t,i="";
	for(t=0;t<e&&t<docTimerCheckbox.length;t++)
		"checked"===x[t].childNodes[0].nodeValue?(docTimerCheckbox[t].checked||($(docTimerCheckbox[t]).prop("checked",!0),
													$(docTimerCheckbox[t]).bootstrapToggle("on")),i+="1",$(docCandles[t].id).removeClass("btn-info").removeClass("btn-success").addClass("btn-danger"))
												:(docTimerCheckbox[t].checked&&($(docTimerCheckbox[t]).prop("checked",!1),
													$(docTimerCheckbox[t]).bootstrapToggle("off")),i+="0",$(docCandles[t].id).removeClass("btn-info").removeClass("btn-danger").addClass("btn-success"));
}
function TimerValueXMLupdate(x){
	var e,
	t= x.length;
	for(e=0;e<t&&e<docTimer.length;e++)
		docTimer[e].value=x[e].childNodes[0].nodeValue;
}
$(".clockpicker.start,.clockpicker.end").clockpicker({twelvehour:!0}),
$(".clockpicker.duration").clockpicker({}),
!function(e){
	function t(t,i){
		var s=e("#"+t.attr("id")),
		a=new n(s,i);
		return a.parent=s.parent(),
		a.handle=a.parent.find(".candlestick-toggle"),
		a.settings=i.customVars(i),
		a.default={},
		a.default.id=a.element.attr("id"),
		a.default.value=a.element.val(),
		a.default.name=a.element.attr("name"),
		a.default.data=a.element.data(),
		a
	}
	var i={};
	e.fn.candlestick=function(s){
									if("val"==s)
										return e(this).find('input[type="hidden"]')?e(this).find('input[type="hidden"]').val():e(this).val();
										var a=!0;
										if("undefined"!=typeof s)
											if("boolean"==typeof s.swipe)
												a=s.swipe;
											else
												if("object"==typeof s.swipe&&"undefined"!=typeof s.swipe.enabled&&"boolean"==typeof s.swipe.enabled){
													var o={enabled:!0,mobile:!0,desktop:!0,transition:!1};
													a=e.extend(o,s.swipe)
												}
												var c={
														mode:"options",
														contents:{left:"Left",middle:"Middle",right:"Right",swipe:!1},
														on:"1",
														off:"0",
														nc:"",
														size:"md",
														swipe:a,
														debug:!1,
														allowManualDefault:!0,
														afterAction:function(){},
														afterRendering:function(){},
														afterOrganization:function(){},
														afterSetting:function(){},
														customVars:function(e){return e}
													};
												if(i[e(this).attr("id")]&&(c=i[e(this).attr("id")]),"string"==typeof s&&e(this).attr("id"))
													switch(s){
													case"on":return this.each(function(){
																							var i=t(e(this),c);
																							i.defaultOrganization(),
																							i.setBackground("on"),
																							i.setHandle(1)
																						});
													case"off":return this.each(function(){
																							var i=t(e(this),c);
																							i.defaultOrganization(),i.setBackground("off"),
																							i.setHandle(-1)
																						});
													case"reset":
													case"default":return this.each(function(){
																								var i=t(e(this),c);
																								c.allowManualDefault&&(i.defaultOrganization(),
																								i.setValue(0))
																							});
													case"enable":return this.each(function(){
																								var i=t(e(this),c);
																								i.parent.removeClass("candlestick-disabled")
																							});
													case"disable":return this.each(function(){
																								var i=t(e(this),c);
																								i.parent.addClass("candlestick-disabled")
																							})
													}
													var l=e.extend(c,s);
													return this.each(function(){
																				if("checkbox"==e(this).attr("type"))
																					if(e(this).attr("id")){
																						var t=new n(e(this),l);
																						i[e(this).attr("id")]=l,
																						t.initialize()
																					} else 
																						e.error("Candlestick needs an unique id attribute to store settings !!!");
																					else
																						e.error("Candlestick only used on checkbox input fields !!!")
																				})
								};
	var n=function(e,t){
						this.element=e,
						this.settings=t.customVars(t),
						this.default={},
						this.getMode("contents")&&this.settings.contents.swipe&&(this.settings.swipe=!1)
					};
	n.prototype.initialize=
		function(){
										this.log("initialize"),
										this.default.id=this.element.attr("id"),
										this.default.value=this.element.val(),
										this.default.name=this.element.attr("name"),
										this.default.data=this.element.data(),
										this.wrapElement(),
										this.delete(),
										this.settings.afterRendering()&&this.settings.afterRendering(this.element,this.parent),
										this.defaultOrganization(),
										this.settings.afterOrganization()&&this.settings.afterOrganization(this.element,this.parent),
										this.assignValue(),
										this.actions()
									},
	n.prototype.wrapElement=
		function(){
										this.log("Create HTMLCandlestick element");
										var e="",
										t="";
										t=this.default.id?this.default.id:this.default.name.replace(/[\[\]]/gi,""),
																			this.log("ID : "+t),
																			this.default.id=t;
																			var i="";
										if(this.default.data){
											var n=this.default.data;
											for(var s in n)
												i+=" data-"+s+'="'+n[s]+'"'
										}
										var a="";
										this.element.attr("disabled")&&(e=" candlestick-disabled",a=" disabled");
										var o="";
										switch(this.element.attr("readonly")&&(e=" candlestick-disabled readonly",o=" readonly"),this.isSwipeEnable()&&(e+=" grab"),this.settings.allowManualDefault||(e+=" candlestick-default-disabled"),this.settings.mode){
										case"contents":
											var c='<div class="candlestick-wrapper candlestick-contents"><div data-candlestick-id="'+t+'" class="candlestick-bg'+e+'"><div class="candlestick-toggle"></div><div class="candlestick-off" data-content="'+this.settings.contents.left+'"></div>';
											this.settings.contents.middle&&(c+='<div class="candlestick-nc" data-content="'+this.settings.contents.middle+'"></div>'),
											c+='<div class="candlestick-on" data-content="'+this.settings.contents.right+'"></div><input type="hidden" class="'+this.element.attr("class")+'" value="'+this.default.value+'" name="'+this.default.name+'" id="'+t+'"'+i+a+o+"></div></div>";
											break;
										default:
											var c='<div class="candlestick-wrapper candlestick-size-'+this.settings.size+'"><div data-candlestick-id="'+t+'" class="candlestick-bg'+e+'"><div class="candlestick-toggle"></div><div class="candlestick-off"><i class="fa fa-times"></i></div><div class="candlestick-nc">&nbsp;</div><div class="candlestick-on"><i class="fa fa-check"></i></div><input type="hidden" class="'+this.element.attr("class")+'" value="'+this.default.value+'" name="'+this.default.name+'" id="'+t+'"'+i+a+o+"></div></div>"
										}
										this.element.wrap(c)
									},
	n.prototype.assignValue=
		function(){
										var e=this.default.value;
										(typeof e==typeof this.settings.on&&e==this.settings.on||typeof e==typeof this.settings.off&&e==this.settings.off)&&this.setPositionByValue(e)
									},
	n.prototype.setValue=
		function(e){
										var t="";
										0==e?t=this.settings.nc:e>0?t=this.settings.on:e<0&&(t=this.settings.off),
																						this.element.val(t),
																						this.settings.afterSetting&&this.settings.afterSetting(this.element,this.parent,t)
									},
	n.prototype.setHandle=
		function(e){
										var t="",i=0;
										return 0==e?(	this.defaultOrganization(),
														this.settings.afterAction(this.element,this.parent,"default"),
														void this.setValue(e)):(e>0?(i=this.parent.outerWidth()-this.parent.find(".candlestick-toggle").outerWidth(),t="on"):e<0&&(t="off"),
														this.settings.afterAction(this.element,this.parent,t),
														this.handle.css("left",i),
														void this.setValue(e))
									},
	n.prototype.setPositionByValue=
		function(e){
										e==this.settings.on?(this.setBackground("on"),this.setHandle(1)):e==this.settings.off&&(this.setBackground("off"),this.setHandle(-1))
									},
	n.prototype.setBackground=
		function(e){
										this.parent.removeClass("on").removeClass("default").removeClass("off"),
										this.parent.addClass(e)
										},
	n.prototype.defaultOrganization=
		function(){
										var e=this.parent.outerHeight(),
										t=this.parent.outerWidth(),
										i=(this.handle.outerWidth(),
										this.handle.outerWidth()),
										n=this.handle.outerHeight();
										this.parent.addClass("default"),
										this.parent.removeClass("on").removeClass("off"),
										this.handle.css({top:(e-n)/2,left:t/2-i/2})
									},
	n.prototype.mouseContents=
		function(){
										var t=this;
										e(".candlestick-bg").on("mousedown",function(i){
																						i.preventDefault(),
																						i.stopPropagation(),
																						t.mouseEvent={leftElement:100,offsetX:0},
																						e(this).addClass("move"),
																						t.mouseEvent.leftElement=parseInt(e(this).find(".candlestick-toggle").css("left")),
																						t.mouseEvent.offsetX=i.pageX
																						}).on("mousemove",function(i){
																														var n;
																														if(i.preventDefault(),i.stopPropagation(),e(this).hasClass("move")){
																															n=i.pageX<t.mouseEvent.offsetX?i.pageX-t.mouseEvent.offsetX:i.pageX-t.mouseEvent.offsetX;
																															var s=t.slot(e(this),n);
																															e(this).find(".candlestick-toggle").css("left",s)
																														}
																													}).on("mouseup",function(i){
																																					i.preventDefault(),
																																					i.stopPropagation(),
																																					e(this).removeClass("move"),
																																					t.placeToggle(e(this))
																																				})
																					},
	n.prototype.placeToggle=
		function(e){
										var t=parseInt(e.find(".candlestick-toggle").innerWidth()),
										i=parseInt(e.find(".candlestick-toggle").css("left"));
										i<=t?(this.log("Off position"),
												i<t/2?(this.log("putOff event"),this.putOff()):(this.log("putDefault event"),this.putDefault())):
											(this.log("Other position (except Off)"),
												i>=t+t/2?(this.log("On position"),this.putOn()):(this.log("default position"),this.putDefault("default")))
									},
	n.prototype.slot=
		function(e,t){
											var i=this.mouseEvent.leftElement+t,
											n=parseInt(e.find(".candlestick-toggle").innerWidth()),
											s=2*n;
											return i>s&&(i=s),i<0&&(i=0),i
										},
	n.prototype.actions=
		function(){
										this.actionOn(),
										this.actionOff(),
										this.actionDefault(),
										this.isSwipeEnable()?(this.log("Swipe is enable. Swipe event is On."),this.actionSwipe()):this.getMode("contents")&&(this.log('"contents" mode. Mouse event is enable.'),this.mouseContents())
									},
	n.prototype.actionOn=
		function(){
										var e=this;
										this.parent.find(".candlestick-on").on("click",function(t){
																									t.preventDefault(),e.putOn()
																								})
									},
	n.prototype.putOn=
		function(){
										this.parent.hasClass("candlestick-disabled")||(this.setBackground("on"),
										this.setHandle(1))
									},
	n.prototype.actionOff=
		function(){
										var e=this;
										this.parent.find(".candlestick-off").on("click",function(t){
																									t.preventDefault(),
																									e.putOff()
																								})
									},
	n.prototype.putOff=
		function(){
										this.parent.hasClass("candlestick-disabled")||(this.setBackground("off"),this.setHandle(-1))
									},
	n.prototype.putToggle=
		function(e){
										if(!this.parent.hasClass("candlestick-disabled"))
											switch(e){
											case"left":
												this.element.val()==this.settings.on?(this.setBackground(""),this.setHandle(0)):
																						this.element.val()==this.settings.nc&&this.putOff();
											break;
											case"right":
												return this.element.val()==this.settings.off?(this.setBackground(""),this.setHandle(0)):
																						this.element.val()==this.settings.nc&&this.putOn(),!1
													}
										},
	n.prototype.actionDefault=
		function(){
										var e=this;
										this.parent.find(".candlestick-nc").on("click",function(t){
																									t.preventDefault(),
																									!e.parent.hasClass("candlestick-disabled")&&e.settings.allowManualDefault&&e.putDefault("default")
																								})
									},
	n.prototype.putDefault=
		function(e){
										this.setBackground(e),
										this.setHandle(0)
									},
	n.prototype.actionSwipe=
		function(){
										var t=this;
										if(t.isSwipeEnable())
											if("undefined"!=typeof e.fn.hammer){
												t.log("Hammerjs is enable");
												var i=t.parent.find(".candlestick-toggle");
												t.getMode("contents")&&(i=t.parent),
												i.hammer({threshold:0,velocity:.1}).bind("panleft",function(e){
																												return t.getMode("contents")||(e.preventDefault(),e.stopPropagation(),t.settings.swipe.transition?t.putToggle("left"):t.putOff()),!1
																											}).bind("panright",function(e){
																																			return t.getMode("contents")||(e.preventDefault(),e.stopPropagation(),t.settings.swipe.transition?t.putToggle("right"):t.putOn()),!1
																																		}).bind("swipeleft",function(i){
																																										t.getMode("contents")&&t.swipeElementContents(e(this),-1)
																																									}).bind("swiperight",function(i){
																																																		t.getMode("contents")&&t.swipeElementContents(e(this),1)
																																																	})
										} else
											e.error("You have to load hammerjs && jquery-hammerjs lib to use swipe option")
							},
	n.prototype.swipeElementContents=
		function(e,t){
											var i=parseInt(this.handle.innerWidth()),
											n=parseInt(this.handle.css("left"));
											t>0?0==n?(this.log("Right swipe to default position"),
														this.settings.nc?this.putDefault():this.putOff()):
												(this.log("Right swipe to on position"),
												this.putOn()):
											t<0&&(n>0&&n>2*i?(this.log("Left swipe to default position"),this.settings.nc?this.putDefault():this.putOn()):(this.log("Left swipe to off position"),this.putOff()))
										},
	n.prototype.isSwipeEnable=
		function(){
										var e=!0;return"boolean"==typeof this.settings.swipe?e=this.settings.swipe:"object"==typeof this.settings.swipe&&(e=this.settings.swipe.enabled),e
									},
	n.prototype.getMode=
		function(e){
					return this.settings.mode==e
				},
	n.prototype.delete=
		function(){
										this.element.remove(),
										this.parent=e('[data-candlestick-id="'+this.default.id+'"]'),
										this.handle=this.parent.find(".candlestick-toggle"),
										this.element=e("#"+this.default.id)
									},
	n.prototype.log=
		function(e){
										this.settings.debug&&console.log(e)
									}
	}(jQuery),
	function(e){
		"function"==typeof define&&define.amd?define(["jquery","hammerjs"],e):"object"==typeof exports?e(require("jquery"),require("hammerjs")):e(jQuery,Hammer)
	}
		(function(e,t){
					function i(i,n){
									var s=e(i);
									s.data("hammer")||s.data("hammer",new t(s[0],n))
									}
					e.fn.hammer=
						function(e){
									return this.each(function(){i(this,e)})
								},
						t.Manager.prototype.emit=
							function(t){
										return function(i,n){
																t.call(this,i,n),
																e(this.element).trigger({type:i,gesture:n})
															}
									}(t.Manager.prototype.emit)
					});
	var gotState=!1,
	changeState,
	docSockets,
	changeStateTCheckbox,
	docTimerCheckbox,
	changeStateTimer,
	docTimer,
	docCandles,
	stateCandles,
	docCountdowns,
	changeStateCountdowns,
	stateCountdownsValue,
	docGroups,
	changeStateGroups,
	docWave,
	changeStateWave,
	docName,
	docNameSave,
	docNameChanged,
	sequence = 0;
	$(".js-candlestick,.js-candlestick").candlestick(),
	strWaveSelection="",
	$("#wave_selection").change(function(){
											switch($(this).val()){
											case"100":
												strWaveSelection="&wave=100";
											break;
											case"110":
												strWaveSelection="&wave=110";
											break;
											case"121":
												strWaveSelection="&wave=121";
											break;
												case"122":
												strWaveSelection="&wave=122";
											break;
											case"123":
												strWaveSelection="&wave=123";
											break;
											case"124":
												strWaveSelection="&wave=124";
											break;
											case"141":
												strWaveSelection="&wave=141";
											break;
											case"142":
												strWaveSelection="&wave=142";
											break;
											case"143":
												strWaveSelection="&wave=143";
											break;case"144":
												strWaveSelection="&wave=144"
											}
										});